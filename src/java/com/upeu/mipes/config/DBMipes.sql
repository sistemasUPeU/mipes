--|*******************|
--|Creacion de Tablas |
--|*******************|
DELIMITER ;

CREATE TABLE PERSONA (
  idPERSONA INTEGER NOT NULL AUTO_INCREMENT,
  NOMBRES VARCHAR(64) NOT NULL,
  APELLIDOS VARCHAR(64) NOT NULL,
  DIRECCION VARCHAR(255) NULL,
  CORREO VARCHAR(128) NULL,
  TELEFONO VARCHAR(15) NULL,
  DNI VARCHAR(10) NOT NULL,
  FE_NACIMIENTO DATE NULL,
  PRIMARY KEY(idPERSONA)
);

CREATE TABLE CAMPO (
  idCAMPO INTEGER NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(64) NOT NULL,
  idLIDER INTEGER NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idCAMPO)
);

CREATE TABLE TIPOLECCION (
  idTIPOLECCION INTEGER NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(64) NOT NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idTIPOLECCION)
);


CREATE TABLE LECCION (
  idLECCION INTEGER NOT NULL AUTO_INCREMENT,
  idTIPOLECCION INTEGER NOT NULL,
  NOMBRE VARCHAR(128) NOT NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idLECCION),
  FOREIGN KEY(idTIPOLECCION)
    REFERENCES TIPOLECCION(idTIPOLECCION) ON DELETE RESTRICT
);

CREATE TABLE ROL (
  idROL INTEGER NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(64) NOT NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idROL)
);

CREATE TABLE PRIVILEGIO (
  idPRIVILEGIO INTEGER NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(64) NOT NULL,
  ICON VARCHAR(35) NOT NULL,
  LINK VARCHAR(255) NOT NULL,
  ORDEN INTEGER NOT NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idPRIVILEGIO)
);

CREATE TABLE USUARIO (
  idUSUARIO INTEGER NOT NULL AUTO_INCREMENT,
  idPERSONA INTEGER NOT NULL,
  USUARIO VARCHAR(64) NOT NULL,
  CLAVE VARCHAR(64) NOT NULL,
  FE_CREACION DATE NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idUSUARIO),
  FOREIGN KEY(idPERSONA)
    REFERENCES PERSONA(idPERSONA) ON DELETE RESTRICT
);

CREATE TABLE DISTRITO (
  idDISTRITO INTEGER NOT NULL AUTO_INCREMENT,
  idCAMPO INTEGER NOT NULL,
  NOMBRE VARCHAR(64) NOT NULL,
  idLIDER INTEGER NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idDISTRITO),
  FOREIGN KEY(idCAMPO)
    REFERENCES CAMPO(idCAMPO) ON DELETE RESTRICT
);

CREATE TABLE DETROL (
  idUSUARIO INTEGER NOT NULL,
  idROL INTEGER NOT NULL,
  PRIMARY KEY(idUSUARIO, idROL),
  FOREIGN KEY(idUSUARIO)
    REFERENCES USUARIO(idUSUARIO) ON DELETE RESTRICT,
  FOREIGN KEY(idROL)
    REFERENCES ROL(idROL) ON DELETE RESTRICT
);

CREATE TABLE DETPRIVILEGIO (
  idROL INTEGER NOT NULL,
  idPRIVILEGIO INTEGER NOT NULL,
  PRIMARY KEY(idROL, idPRIVILEGIO),
  FOREIGN KEY(idROL)
    REFERENCES ROL(idROL) ON DELETE RESTRICT,
  FOREIGN KEY(idPRIVILEGIO)
    REFERENCES PRIVILEGIO(idPRIVILEGIO) ON DELETE RESTRICT
);

CREATE TABLE IGLESIA (
  idIGLESIA INTEGER NOT NULL AUTO_INCREMENT,
  idDISTRITO INTEGER NOT NULL,
  NOMBRE VARCHAR(64) NOT NULL,
  ESTADO CHAR(1) NOT NULL,
  idLIDER INTEGER NULL,
  PRIMARY KEY(idIGLESIA),
  FOREIGN KEY(idDISTRITO)
    REFERENCES DISTRITO(idDISTRITO) ON DELETE RESTRICT
);

CREATE TABLE MINISTERIO (
  idMINISTERIO INTEGER NOT NULL AUTO_INCREMENT,
  idIGLESIA INTEGER NOT NULL,
  NOMBRE VARCHAR(64) NOT NULL,
  FE_CREACION DATE NOT NULL,
  US_CREADOR INTEGER NOT NULL,
  idLIDER INTEGER NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idMINISTERIO),
  FOREIGN KEY(idIGLESIA)
    REFERENCES IGLESIA(idIGLESIA) ON DELETE RESTRICT
);

CREATE TABLE ASISTENCIAMI (
  idASISTENCIAMI INTEGER NOT NULL AUTO_INCREMENT,
  idMINISTERIO INTEGER NOT NULL,
  FECHA DATE NOT NULL,
  LUGAR VARCHAR(255) NOT NULL,
  DESCRIPCION VARCHAR(255) NOT NULL,
  PRESENTES INTEGER NOT NULL,
  FALTAS INTEGER NOT NULL,
  BENEFICIARIOS INTEGER NOT NULL,
  PRIMARY KEY(idASISTENCIAMI),
  FOREIGN KEY(idMINISTERIO)
    REFERENCES MINISTERIO(idMINISTERIO) ON DELETE RESTRICT
);

CREATE TABLE MIEMBROMI (
  idMIEMBROMI INTEGER NOT NULL AUTO_INCREMENT,
  idPERSONA INTEGER NOT NULL,
  idMINISTERIO INTEGER NOT NULL,
  FE_UNION DATE NOT NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idMIEMBROMI),
  FOREIGN KEY(idMINISTERIO)
    REFERENCES MINISTERIO(idMINISTERIO) ON DELETE RESTRICT,
  FOREIGN KEY(idPERSONA)
    REFERENCES PERSONA(idPERSONA) ON DELETE RESTRICT
);

CREATE TABLE ESCUELA (
  idESCUELA INTEGER NOT NULL AUTO_INCREMENT,
  idIGLESIA INTEGER NOT NULL,
  NOMBRE VARCHAR(64) NOT NULL,
  idLIDER INTEGER NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idESCUELA),
  FOREIGN KEY(idIGLESIA)
    REFERENCES IGLESIA(idIGLESIA) ON DELETE RESTRICT
);

CREATE TABLE ASMIEMBROMI (
  idASMIEMBROMI INTEGER NOT NULL AUTO_INCREMENT,
  idASISTENCIAMI INTEGER NOT NULL,
  idMIEMBROMI INTEGER NOT NULL,
  ASISTENCIA CHAR(1) NOT NULL,
  PRIMARY KEY(idASMIEMBROMI),
  FOREIGN KEY(idMIEMBROMI)
    REFERENCES MIEMBROMI(idMIEMBROMI) ON DELETE RESTRICT,
  FOREIGN KEY(idASISTENCIAMI)
    REFERENCES ASISTENCIAMI(idASISTENCIAMI) ON DELETE RESTRICT
);

CREATE TABLE GRUPO (
  idGRUPO INTEGER NOT NULL AUTO_INCREMENT,
  idESCUELA INTEGER NOT NULL,
  NOMBRE VARCHAR(64) NOT NULL,
  FE_CREACION DATE NOT NULL,
  US_CREADOR INTEGER NOT NULL,
  LUG_REUNION VARCHAR(255) NOT NULL,
  idLIDER INTEGER NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idGRUPO),
  FOREIGN KEY(idESCUELA)
    REFERENCES ESCUELA(idESCUELA) ON DELETE RESTRICT
);

CREATE TABLE ASISTENCIAGP (
  idASISTENCIAGP INTEGER NOT NULL AUTO_INCREMENT,
  idGRUPO INTEGER NOT NULL,
  FECHA DATE NOT NULL,
  LUGAR VARCHAR(255) NOT NULL,
  PRESENTES INTEGER NOT NULL,
  FALTAS INTEGER NOT NULL,
  VISITAS INTEGER NOT NULL,
  PRIMARY KEY(idASISTENCIAGP),
  FOREIGN KEY(idGRUPO)
    REFERENCES GRUPO(idGRUPO) ON DELETE RESTRICT
);

CREATE TABLE MIEMBROGP (
  idMIEMBROGP INTEGER NOT NULL AUTO_INCREMENT,
  idPERSONA INTEGER NOT NULL,
  idGRUPO INTEGER NOT NULL,
  FE_UNION DATE NOT NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idMIEMBROGP),
  FOREIGN KEY(idGRUPO)
    REFERENCES GRUPO(idGRUPO) ON DELETE RESTRICT,
  FOREIGN KEY(idPERSONA)
    REFERENCES PERSONA(idPERSONA) ON DELETE RESTRICT
);

CREATE TABLE DISCIPULADOR (
  idDISCIPULADOR INTEGER NOT NULL AUTO_INCREMENT,
  idMIEMBROGP INTEGER NOT NULL,
  idASOCIADO INTEGER NULL,
  FE_INICIO DATE NOT NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idDISCIPULADOR),
  FOREIGN KEY(idMIEMBROGP)
    REFERENCES MIEMBROGP(idMIEMBROGP) ON DELETE RESTRICT
);

CREATE TABLE ASMIEMBROGP (
  idASMIEMBROGP INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  idMIEMBROGP INTEGER NOT NULL,
  idASISTENCIAGP INTEGER NOT NULL,
  ASISTENCIA CHAR(1) NULL,
  PRIMARY KEY(idASMIEMBROGP),
  FOREIGN KEY(idASISTENCIAGP)
    REFERENCES ASISTENCIAGP(idASISTENCIAGP) ON DELETE RESTRICT,
  FOREIGN KEY(idMIEMBROGP)
    REFERENCES MIEMBROGP(idMIEMBROGP) ON DELETE RESTRICT
);

CREATE TABLE DISCIPULADO (
  idDISCIPULADO INTEGER NOT NULL AUTO_INCREMENT,
  idPERSONA INTEGER NOT NULL,
  TIPO CHAR(1) NULL,
  FE_INICIO DATE NULL,
  ESTADO CHAR(1) NULL,
  PRIMARY KEY(idDISCIPULADO),
  FOREIGN KEY(idPERSONA)
    REFERENCES PERSONA(idPERSONA) ON DELETE RESTRICT
);

CREATE TABLE DETDISCIPULADOR (
  idDISCIPULADOR INTEGER NOT NULL,
  idDISCIPULADO INTEGER NOT NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idDISCIPULADOR, idDISCIPULADO),
  FOREIGN KEY(idDISCIPULADOR)
    REFERENCES DISCIPULADOR(idDISCIPULADOR),
  FOREIGN KEY(idDISCIPULADO)
    REFERENCES DISCIPULADO(idDISCIPULADO)
);

CREATE TABLE TRABMISIONERO (
  idTRABMISIONERO INTEGER NOT NULL AUTO_INCREMENT,
  idLECCION INTEGER NOT NULL,
  idDISCIPULADO INTEGER NOT NULL,
  idDISCIPULADOR INTEGER NOT NULL,
  FECHA DATE NOT NULL,
  PRIMARY KEY(idTRABMISIONERO),
  FOREIGN KEY(idDISCIPULADOR, idDISCIPULADO)
    REFERENCES DETDISCIPULADOR(idDISCIPULADOR, idDISCIPULADO) ON DELETE RESTRICT,
  FOREIGN KEY(idLECCION)
    REFERENCES LECCION(idLECCION) ON DELETE RESTRICT
);

CREATE TABLE DETLECCION (
  idTIPOLECCION INTEGER NOT NULL,
  idDISCIPULADO INTEGER NOT NULL,
  ESTADO CHAR(1) NOT NULL,
  PRIMARY KEY(idTIPOLECCION, idDISCIPULADO),
  FOREIGN KEY(idTIPOLECCION)
    REFERENCES TIPOLECCION(idTIPOLECCION) ON DELETE RESTRICT,
  FOREIGN KEY(idDISCIPULADO)
    REFERENCES DISCIPULADO(idDISCIPULADO) ON DELETE RESTRICT
);
--------------------------------------------------------------------------------
--|*****************************|
--|Valores por defecto de la BD |
--|*****************************|

--ROLES
--Rol 1
INSERT INTO ROL (idROL, NOMBRE, ESTADO) VALUES(1,'Miembro','1');
--Rol 2
INSERT INTO ROL (idROL, NOMBRE, ESTADO) VALUES(2,'Lider de Grupo Peque√±o','1');
--Rol 3
INSERT INTO ROL (idROL, NOMBRE, ESTADO) VALUES(3,'Lider de Ministerio','1');
--Rol 4
INSERT INTO ROL (idROL, NOMBRE, ESTADO) VALUES(4,'Discipulador','1');
--Rol 5
INSERT INTO ROL (idROL, NOMBRE, ESTADO) VALUES(5,'MIPES de Iglesia','1');
--Rol 6
INSERT INTO ROL (idROL, NOMBRE, ESTADO) VALUES(6,'MIPES de Distrito','1');
--Rol 7
INSERT INTO ROL (idROL, NOMBRE, ESTADO) VALUES(7,'MIPES de Campo','1');
--Rol 8
INSERT INTO ROL (idROL, NOMBRE, ESTADO) VALUES(8,'Administrador','1');
--Rol 9
INSERT INTO ROL (idROL, NOMBRE, ESTADO) VALUES(9,'MIPES de Union Peruana','1');
--Rol 10	
INSERT INTO ROL (idROL, NOMBRE, ESTADO) VALUES(10,'MIPES de Escuela Sabatica','1');		


--PRIVILEGIOS
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(1,'Ver Perfil','fa fa-smile-o','home?orden=1&opc=1',1,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(2,'Crear Campo','fa fa-plus','home?orden=2&opc=1',2,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(3,'Lista de Campos','fa fa-list','home?orden=2&opc=2',2,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(5,'Distritos Misioneros','fa fa-gear','home?orden=3&opc=1',3,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(6,'Crear Iglesia','fa fa-plus','home?orden=4&opc=1',4,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(7,'Lista de Iglesias','fa fa-list','home?orden=4&opc=2',4,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(8,'Escuelas Sab√°ticas','fa fa-gear','home?orden=5&opc=1',5,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(9,'Registro de Grupos Peque√±os','fa fa-plus','home?orden=6&opc=1',6,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(10,'Listado de Grupos Peque√±os','fa fa-list','home?orden=6&opc=2',6,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(11,'Gestion de Miembros','fa fa-users','home?orden=6&opc=3',6,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(14,'Registro de Asistencia','fa fa-gear','home?orden=6&opc=4',6,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(15,'Registro de Ministerios','fa fa-plus','home?orden=7&opc=1',7,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(16,'Listado de Ministerios','fa fa-list','home?orden=7&opc=2',7,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(17,'Gestion de Miembros','fa fa-users','home?orden=7&opc=3',7,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(18,'Trabajo Misionero de Ministerios','fa fa-check-square-o','home?orden=7&opc=4',7,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(23,'Trabajo Misionero del Discipulador','fa fa-gear','home?orden=8&opc=1',8,'1');
--INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(13,'Gestion de Discipulados','fa fa-gear','home?orden=8&opc=2',8,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(12,'Gestion de Discipuladores','fa fa-gear','home?orden=8&opc=3',8,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(19,'Asistencia de Grupos Peque√±os','fa fa-line-chart','home?orden=9&opc=1',9,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(20,'Trabajo Misionero de Ministerios','fa fa-line-chart','home?orden=9&opc=2',9,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(21,'Trabajo Misionero del Discipulado','fa fa-line-chart','home?orden=9&opc=3',9,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(22,'Gestion de Usuarios y Privilegios','fa fa-user','home?orden=10&opc=1',10,'1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES(24,'Gestion de Lecciones de Estudio','fa fa-book','home?orden=8&opc=4',8,'1');
--PARA LISTAR EL NIVEL DE ASISTENCIA DE LOS INTEGRANTES DE G.P. Y MINISTERIO
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES (25, 'Reporte de Integrantes', 'fa fa-users', 'home?orden=9&opc=7', 9, '1');
INSERT INTO PRIVILEGIO (IDPRIVILEGIO,NOMBRE, ICON, LINK, ORDEN, ESTADO) VALUES (26, 'Reporte de Integrantes', 'fa fa-users', 'home?orden=9&opc=8', 9, '1');
--Privilegios de Cada Rol
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(1,1);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(9,2);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(9,3);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(7,5);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(6,6);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(6,7);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(5,8);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(10,9);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(10,10);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(2,11);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(2,12);
--INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(2,13);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(2,14);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(3,17);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(3,18);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(2,19);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(2,20);
--INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(2,21);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(3,19);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(3,20);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(3,21);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(5,19);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(5,20);
--INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(5,21);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(6,19);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(6,20);
--INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(6,21);
--INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(7,19);
--INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(7,20);
--INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(7,21);
--INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(9,19);
--INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(9,20);
--INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(9,21);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(8,22);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(5,15);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(5,16);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(5,9);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(5,10);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(4,23);
--INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(4,13);
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES(5,24);
--PARA LISTAR INTEGRANTES DE GP Y MINISTERIO
INSERT INTO `detprivilegio` VALUES (2, 25);
INSERT INTO `detprivilegio` VALUES (3, 26);
--REPORTE DE ASISTENCIA AL G.P. POR E.S.
INSERT INTO DETPRIVILEGIO (idROL, idPRIVILEGIO) VALUES (10, 19);

INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 10);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (7, 10);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 11);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (6, 11);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 12);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 13);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (5, 13);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 14);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 15);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 16);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 17);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (10, 17);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 18);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 19);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (10, 19);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 20);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (10, 20);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 21);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (6, 21);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 22);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 23);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 24);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (2, 24);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (2, 22);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (2, 12);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 25);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (10, 25);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 27);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 28);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (2, 28);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 29);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (10, 29);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (2, 19);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (2, 15);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (2, 18);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 30);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (2, 30);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES (1, 26);
--Usuario Administrador
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, 
DNI, FE_NACIMIENTO) VALUES(1, 'Admin','Root','localhost','admin@correo.com','00000000',
'00000000',NOW());
INSERT INTO USUARIO (idUSUARIO, idPERSONA, USUARIO, CLAVE, FE_CREACION, ESTADO) VALUES(
1, 1, 'admin','root',NOW(),'1');
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES( 1,1);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES( 8,1);

--Usuario MIPES Union Peruna
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, 
DNI, FE_NACIMIENTO) VALUES(2, 'Lider de MIPES','Union Peruana','Sin definir','Sin definir','Sin Definir',
'Sin Defin',NOW());
INSERT INTO USUARIO (idUSUARIO, idPERSONA, USUARIO, CLAVE, FE_CREACION, ESTADO) VALUES(
2, 2, 'union','union',NOW(),'1');
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES(9,2);
INSERT INTO DETROL ( idROL, idUSUARIO) VALUES(1,2);

INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (10, 'JAIME', 'PEREZ', 'NINGUNO', 'NINGUNO', '963258', '123', '2016-07-09');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (11, 'ISAAC', 'MANSILLA', 'NINGUNO', 'NINGUNO', '987456321', '753', '2016-07-20');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (12, 'JORGE LUIS', 'SUAREZ INGA', 'Nueva Esperanza B-10 - Gloria Alta', 'jorgeluissuarez@outlook.com', '933791666', '09738386', '2016-07-30');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (13, 'PERCY', 'PANEZ', 'NINGUNO', 'MIPES@mipes', '9632145', '4545', '2016-07-21');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (14, 'VIOLETA ', 'QUISPICURO HUAM√ÅN ', 'La Alameda Mz "M" 21', 'violeta.quispicuro@gmail.com', '980863889', '47084518', '1991-01-06');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (15, 'YOLANDA', 'FANO NIVAS', 'villa los sauces mz. e lt 8', 'yolandafanovivas@gmail.com', '975973828', '10502763', '1956-01-14');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (16, 'ABNER JHONATAN ', 'RODR√çGUEZ BUSTAMANTE', 'La alameda de √ëa√±a Mz M lote 21 ', 'abner.rodriguezbustamante@gmail.com', '980863889', '45316517', '1988-09-12');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (17, 'SEVERIANO', 'VASQUEZ DIAZ', 'Martin Napan A 140 Miraflores', 'cvvasd@hotmail.com', '942785559', '10311531', '1955-08-08');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (18, 'JUANA', 'SALCEDO MAUTINO', 'VILLA LOS SAUCES MZ. B LT. 18', 'NINGUNO', 'NINGUNO', '07656870', '1932-06-24');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (19, 'SAMUEL', 'BUSTAMANTE ESTELA', 'Mz D Lote 19 Villa Migdal Shalom', 'samuelbustamante@teologia.edu.pe', '982521607', '10391265', '1963-02-21');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (20, 'PRUEBA', 'PRUEBA PRUEBA', 'NINGUNO', 'abc@hotmail.com', '987654321', '1312', '2016-12-12');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (21, 'JUAN CARLOS', 'LIVAQUE', 'NINGUNO', 'abc@hotmail.com', '987654321', '44444', '2016-02-01');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (22, 'SEGUNDO BENJAMIN', 'CABANILLAS CHAVEZ', 'calle 7 Mz.C  Lte 30 urb. alameda de √±a√±a ', 'NINGUNO', '956749817', '32806082', '1941-07-28');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (23, 'TOLOMEO', 'RIVAS DURAN', 'Av. El Carmen Mz. D Lt. 10 La era', 'tolomeo@hotmail.com', '123', '07125309', '1946-10-19');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (24, 'RUTH', 'AGUIRRE PAREDES', 'VILLA MIGDAL SHALOM', 'NINGUNO', '994630164', 'no tiene', NULL);
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (25, 'GREGORIO', 'JUAN ANASTASIO', 'Urb. La Alameda de √ëa√±a', 'NINGUNO', '941492984', '19201966', '1946-01-14');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (26, 'WALTER WILDER', 'CARUAJULCA TAPIA', 'Av balaguer SN', 'wcaruajulcat@gmail.com', '957314365', '16769873', '1967-07-20');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (27, 'ALEXANDER JESUS', 'CARRION CARMEN', 'Urb. Sol De Huampani Mz. M Lt. 04 - IV Etapa - Chosica', 'carrion@hotmail.com', '945651973', '41568253', '1981-05-16');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (28, 'FRANCISCO', 'GUERRERO VALLEJOS', 'Alameda de √ëa√±a', 'suarez_50@hotmail.com', '997026027', '09738387', '1959-10-10');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (29, 'MANUEL', 'RUIZ FLORIAN', 'Mz X Lote 3 Segunda Etapa La Era', 'abc@hotmail.com', '987654321', '09077828', '1947-11-09');
INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES (30, 'COSME ', 'CASTILLO', 'Mz C Lote 4 Alameda 4ta.Etapa', 'hopebenezer@gmail.com', '982521608', '00997766', '1958-09-27');

INSERT INTO `campo` VALUES (1, 'APCE', 10, '1');

INSERT INTO `usuario` VALUES (10, 10, '123', '123', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (11, 11, '753', '753', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (12, 12, '09738386', '09738386', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (13, 13, '4545', '4545', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (14, 14, '47084518', '47084518', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (15, 15, '10502763', '10502763', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (16, 16, '45316517', '45316517', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (17, 17, '10311531', '10311531', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (18, 18, '07656870', '07656870', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (19, 19, '10391265', '10391265', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (20, 20, '1312', '1312', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (21, 21, '44444', '44444', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (22, 22, '32806082', '32806082', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (23, 23, '07125309', '07125309', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (24, 24, 'ninguno', 'ninguno', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (25, 26, '16769873', '16769873', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (26, 25, '19201966', '19201966', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (27, 27, '41568253', '41568253', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (28, 28, '09738387', '09738387', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (29, 29, '09077828', '09077828', '2016-07-30', '1');
INSERT INTO `usuario` VALUES (30, 30, '00997766', '00997766', '2016-07-30', '1');

INSERT INTO `distrito` VALUES (1, 1, 'VILLA UNION', 11, '1');
INSERT INTO `distrito` VALUES (2, 1, 'SHADAI', 21, '1');

INSERT INTO `iglesia` VALUES (1, 1, 'IGLESIA ADULTA', '1', 13);
INSERT INTO `iglesia` VALUES (2, 2, 'IGLESIA JOVEN - SHADAI', '1', 0);

INSERT INTO `escuela` VALUES (1, 1, 'EMANUEL', 12, '1');
INSERT INTO `escuela` VALUES (2, 1, 'LIRIO DE LOS VALLES', 17, '1');
INSERT INTO `escuela` VALUES (3, 1, 'MARANATHA', 29, '1');
INSERT INTO `escuela` VALUES (4, 1, 'PRUEBA', 20, '1');
INSERT INTO `escuela` VALUES (5, 1, 'MIGDAL SHALOM', 26, '1');

INSERT INTO `grupo` VALUES (1, 1, 'EMANUEL 01- ALAMEDA', '2016-01-01', 12, 'MIGDAL SHALOOM', 24, '1');
INSERT INTO `grupo` VALUES (2, 2, 'LOS PESCADORES', '2016-07-30', 17, 'CARAPONGO', 22, '1');
INSERT INTO `grupo` VALUES (3, 1, 'EMANUEL 02 - GLORIA GRANDE', '2016-01-01', 12, 'NUEVA ESPERANZA B-10 GLORIA GRANDE', 12, '1');
INSERT INTO `grupo` VALUES (4, 1, 'EMANUEL 03 - CARAPONGO', '2016-01-01', 12, 'VALLECITO DE CARAPONGO', 28, '1');
INSERT INTO `grupo` VALUES (8, 2, 'PENIEL ', '2015-08-11', 17, 'CASA DEL PASTOR  SALOM√ìN ARANA ', 0, '1');
INSERT INTO `grupo` VALUES (9, 2, 'LA MANCION ', '2013-07-30', 17, 'CASA DEL PASTOR LOPES ', 0, '1');
INSERT INTO `grupo` VALUES (10, 5, 'EBENECER  ', '2016-07-30', 25, 'LOS SAUCES', 15, '1');
INSERT INTO `grupo` VALUES (11, 3, 'MARANATHA BASE', '2016-07-29', 29, 'PABELLON E SALON 108', 19, '1');
INSERT INTO `grupo` VALUES (12, 5, 'MAHANAIN', '2016-07-30', 25, 'LOS SAUCES', 18, '1');

INSERT INTO `miembrogp` VALUES (1, 22, 2, '2016-07-30', '1');
--------------------------------------------------------------------------------
--|***************************************|
--|Funciones y Procedimientos Almacenados |
--|***************************************|



-- GET_LINK
DELIMITER $$
CREATE PROCEDURE GET_LINK (IDUSER INTEGER)
BEGIN
SELECT P.*
FROM USUARIO U, DETROL DR, ROL R, DETPRIVILEGIO DP, PRIVILEGIO P
WHERE U.IDUSUARIO= DR.IDUSUARIO
AND R.IDROL=DR.idROL
AND DP.IDROL= R.idROL
AND DP.idPRIVILEGIO= P.idPRIVILEGIO
AND U.idUSUARIO=IDUSER;
END$$


--PRE_LOGIN
CREATE PROCEDURE PRE_LOGIN (USER VARCHAR(35))
BEGIN
SELECT R.NOMBRE,U.CLAVE
FROM USUARIO U, DETROL DR, ROL R
WHERE U.IDUSUARIO = DR.idUSUARIO
AND DR.IDROL =R.idROL
AND U.usuario=USER;
END$$


-- LOGIN
CREATE PROCEDURE LOGIN (USER VARCHAR(64) , CLAVE VARCHAR(64))
BEGIN
SELECT P.IDPERSONA, P.NOMBRES, P.APELLIDOS,
U.IDUSUARIO, U.USUARIO
FROM PERSONA P, USUARIO U 
WHERE U.IDPERSONA= P.IDPERSONA
AND U.USUARIO=USER AND U.CLAVE=CLAVE
LIMIT 1;
END$$


--REG_IDLIDER(idpersona, que tabla, id de la tabla)
CREATE PROCEDURE REG_IDLIDER(IDP INTEGER,ESLIDER INTEGER, idTABLA INTEGER)
BEGIN
DECLARE IDU INTEGER;
    SELECT IDUSUARIO INTO IDU FROM USUARIO WHERE IDPERSONA=IDP LIMIT 1;
    --MIPES DE CAMPO
    IF ESLIDER=1 THEN
        START TRANSACTION;
        UPDATE CAMPO SET idLIDER=IDP WHERE idCAMPO=idTABLA;
        COMMIT;
        IF(SELECT COUNT(*) FROM DETROL WHERE IDROL=7 AND IDUSUARIO=IDU)=0 THEN
            START TRANSACTION;
            INSERT INTO DETROL ( idROL, idUSUARIO) VALUES(7,IDU);
            COMMIT;
        END IF;
    --MIPES DE DISTRITO
    ELSEIF ESLIDER=2 THEN
        START TRANSACTION;
        UPDATE DISTRITO SET idLIDER=IDP WHERE IDDISTRITO=idTABLA;
        COMMIT;
        IF(SELECT COUNT(*) FROM DETROL WHERE IDROL=6 AND IDUSUARIO=IDU)=0 THEN
            START TRANSACTION;
            INSERT INTO DETROL ( idROL, idUSUARIO) VALUES(6,IDU);
            COMMIT;
        END IF;
    --MIPES DE IGLESIA
    ELSEIF ESLIDER=3 THEN
        START TRANSACTION;
        UPDATE IGLESIA SET idLIDER=IDP WHERE IDIGLESIA=idTABLA;
        COMMIT;
        IF(SELECT COUNT(*) FROM DETROL WHERE IDROL=5 AND IDUSUARIO=IDU)=0 THEN
            START TRANSACTION;
            INSERT INTO DETROL ( idROL, idUSUARIO) VALUES(5,IDU);
            COMMIT;
        END IF;
    --MIPES DE ESCUELA
    ELSEIF ESLIDER=4 THEN
        START TRANSACTION;
        UPDATE ESCUELA SET idLIDER=IDP WHERE IDESCUELA=idTABLA;
        COMMIT;
        IF(SELECT COUNT(*) FROM DETROL WHERE IDROL=10 AND IDUSUARIO=IDU)=0 THEN
            START TRANSACTION;
            INSERT INTO DETROL ( idROL, idUSUARIO) VALUES(10,IDU);
            COMMIT;
        END IF;
    --LIDER DE GRUPO
    ELSEIF ESLIDER=5 THEN
        START TRANSACTION;
        UPDATE GRUPO SET idLIDER=IDP WHERE IDGRUPO=idTABLA;
        COMMIT;
        IF(SELECT COUNT(*) FROM DETROL WHERE IDROL=2 AND IDUSUARIO=IDU)=0 THEN
            START TRANSACTION;
            INSERT INTO DETROL ( idROL, idUSUARIO) VALUES(2,IDU);
            INSERT INTO MIEMBROGP (idPERSONA,idGRUPO,FE_UNION,ESTADO) VALUES 
            (IDU,idTABLA,(SELECT SYSDATE()),1);
            COMMIT;
        END IF;
    --LIDER DE MINISTERIO
    ELSEIF ESLIDER=6 THEN
        START TRANSACTION;
        UPDATE MINISTERIO SET idLIDER=IDP WHERE IDMINISTERIO=idTABLA;
        COMMIT;
        IF(SELECT COUNT(*) FROM DETROL WHERE IDROL=3 AND IDUSUARIO=IDU)=0 THEN
            START TRANSACTION;
            INSERT INTO DETROL ( idROL, idUSUARIO) VALUES(3,IDU);
            INSERT INTO MIEMBROMI (idPERSONA,idMINISTERIO,FE_UNION,ESTADO) 
            VALUES (IDU,idTABLA,(SELECT SYSDATE()),1);
            COMMIT;
        END IF;
    END IF;
END$$


-- REG_PERSONA
CREATE PROCEDURE REG_PERSONA
(NOMBRESi VARCHAR(64), APELLIDOSi VARCHAR(64),
 DIRECCIONi VARCHAR(255), CORREOi VARCHAR(128), TELEFONOi VARCHAR(15),
DNIi VARCHAR(10),FE_NACIMIENTOi VARCHAR(35),ESLIDER INTEGER, IDTABLA INTEGER)
BEGIN
    DECLARE IDP INTEGER;
    DECLARE IDU INTEGER;
    IF (SELECT COUNT(*) FROM PERSONA WHERE DNI=DNIi)= 0 THEN
        START TRANSACTION;
            INSERT INTO PERSONA (idPERSONA, NOMBRES, APELLIDOS, DIRECCION, CORREO, TELEFONO, DNI, FE_NACIMIENTO) VALUES(
            NULL, NOMBRESi, APELLIDOSi, DIRECCIONi, CORREOi, TELEFONOi, DNIi, FE_NACIMIENTOi);
        COMMIT;
        IF ESLIDER>0 THEN
        CALL REG_IDLIDER(IDP,ESLIDER,IDLIDERi);
        END IF;
        SELECT MAX(IDPERSONA) AS IDPERSONA FROM PERSONA;
    ELSE
        SELECT 0 AS IDPERSONA;
    END IF;
END$$

--GET_PORCENT_ASISTENCIA
CREATE FUNCTION GET_PORCENT_ASIST (idMIEMBROGPi INTEGER)
RETURNS DECIMAL
BEGIN
DECLARE per decimal;
  DECLARE asgp INTEGER;
  DECLARE asint INTEGER;
  DECLARE idgp INTEGER;
  SET asgp=0;
  SET asint=0;
  SELECT IDGRUPO INTO idgp FROM MIEMBROGP WHERE IDMIEMBROGP=idMIEMBROGPi;
  SELECT COUNT(*) INTO asint FROM ASMIEMBROGP WHERE IDMIEMBROGP=idMIEMBROGPi AND ASISTENCIA='1';
  SELECT COUNT(*) INTO asgp FROM ASISTENCIAGP WHERE IDGRUPO=idgp;
  SET per = (asint*100)/asgp;
  RETURN IFNULL(per,0);
END$$

--GET PORCENT ASIST MI

CREATE FUNCTION GET_PORCENT_ASISTMI (idMIEMBROMIi INTEGER)
RETURNS DECIMAL
BEGIN
DECLARE per decimal;
  DECLARE asmi INTEGER;
  DECLARE asint INTEGER;
  DECLARE idmi INTEGER;
  SET asmi=0;
  SET asint=0;
  SELECT IDMINISTERIO INTO idmi FROM MIEMBROMI WHERE IDMIEMBROMI=idMIEMBROMIi;
  SELECT COUNT(*) INTO asint FROM ASMIEMBROMI WHERE IDMIEMBROMI=idMIEMBROMIi AND ASISTENCIA='1';
  SELECT COUNT(*) INTO asmi FROM ASISTENCIAMI WHERE IDMINISTERIO=idmi;
  SET per = (asint*100)/asmi;
  RETURN IFNULL(per,0);
END$$

-- LIST_ASISTENCIA
CREATE PROCEDURE LIST_ASISTENCIA (idGRUPOi INTEGER)
BEGIN
SELECT P.IDPERSONA, MG.IDMIEMBROGP, P.NOMBRES, P.APELLIDOS,P.DNI,P.TELEFONO,P.FE_NACIMIENTO, GET_PORCENT_ASIST(MG.IDMIEMBROGP) as PORCENTAJE
FROM GRUPO G, MIEMBROGP MG, PERSONA P
WHERE
MG.IDPERSONA = P.IDPERSONA
AND G.IDGRUPO=MG.IDGRUPO
AND MG.ESTADO='1'
AND G.IDGRUPO=idGRUPOi;
END$$

--LIST_ASISTENCIA MINISTERIO
DELIMITER $$
CREATE PROCEDURE LIST_ASISTENCIAMI (IDMINISTERIOi INTEGER)
BEGIN
SELECT P.IDPERSONA, MG.IDMIEMBROMI, P.NOMBRES, P.APELLIDOS,P.DNI,P.TELEFONO,P.FE_NACIMIENTO,
 GET_PORCENT_ASISTMI(MG.IDMIEMBROMI) as PORCENTAJE
FROM MINISTERIO M, MIEMBROMI MG, PERSONA P
WHERE
MG.IDPERSONA = P.IDPERSONA
AND M.IDMINISTERIO=MG.IDMINISTERIO
AND MG.ESTADO='1'
AND M.IDMINISTERIO=IDMINISTERIOi;
END$$


--REG_ASISTENCIA_INT_GP
CREATE PROCEDURE REG_ASISTENCIA_INT_GP (idIntegrante INTEGER, idAsistencia INTEGER, Asist CHAR(1))
BEGIN
START TRANSACTION;
INSERT INTO ASMIEMBROGP (idASMIEMBROGP, idMIEMBROGP, idASISTENCIAGP, ASISTENCIA) VALUES(
NULL, idIntegrante, idAsistencia, Asist);
COMMIT;
SELECT 1;
END$$
--IS_ENABLE_GP
CREATE PROCEDURE IS_ENABLE_AS_GP (idGrupoi INTEGER)
BEGIN
    IF(SELECT COUNT(*) FROM ASISTENCIAGP WHERE IDGRUPO=idGrupoi)>0 THEN
        SELECT IFNULL(yearweek(NOW())-
        (SELECT MAX(yearweek(FECHA)) FROM ASISTENCIAGP WHERE IDGRUPO=idGrupoi),0) AS RESULT;
    ELSE
        SELECT 1 AS RESULT;
    END IF;
END$$
--REG_ASISTENCIA_GP
CREATE PROCEDURE REG_ASISTENCIA_GP 
(idGRUPOi INTEGER,LUGARi VARCHAR(255), PRESENTESi INTEGER, FALTASi INTEGER, VISITASi INTEGER)
BEGIN
START TRANSACTION;
INSERT INTO ASISTENCIAGP (idASISTENCIAGP, idGRUPO, FECHA, LUGAR, PRESENTES, FALTAS, VISITAS) VALUES(
NULL,idGRUPOi,NOW(),LUGARi, PRESENTESi, FALTASi, VISITASi);
COMMIT;
SELECT MAX(idASISTENCIAGP) AS idASISTENCIAGP FROM ASISTENCIAGP;
END$$
--REG_ASISTENCIA_MIN
DELIMITER $$
CREATE PROCEDURE REG_ASISTENCIA_MIN
(idMINISTERIOi INTEGER,LUGARi VARCHAR(255),DESCRIPCIONi VARCHAR(255) ,PRESENTESi INTEGER, FALTASi INTEGER, BENEFICIARIOSi INTEGER)
BEGIN
START TRANSACTION;
INSERT INTO ASISTENCIAMI (idASISTENCIAMI, idMINISTERIO, FECHA, LUGAR, DESCRIPCION,PRESENTES, FALTAS, BENEFICIARIOS) 
VALUES(NULL,idMINISTERIOi,NOW(),LUGARi,DESCRIPCIONi, PRESENTESi, FALTASi, BENEFICIARIOSi);
COMMIT;
SELECT MAX(idASISTENCIAMI) AS idASISTENCIAMI FROM ASISTENCIAMI;
END$$
--REG_ASISTENCIA_INT_MIN
DELIMITER $$
CREATE PROCEDURE REG_ASISTENCIA_INT_MIN 
(idIntegrante INTEGER, idAsistencia INTEGER, Asist CHAR(1))
BEGIN
START TRANSACTION;
INSERT INTO ASMIEMBROMI (idASMIEMBROMI, idMIEMBROMI, idASISTENCIAMI, ASISTENCIA) VALUES(
NULL, idIntegrante, idAsistencia, Asist);
COMMIT;
SELECT 1;
END$$
--IS_ENABLE_MI
CREATE PROCEDURE IS_ENABLE_AS_MI (idMinisterioi INTEGER)
BEGIN
    IF(SELECT COUNT(*) FROM ASISTENCIAMI WHERE IDMINISTERIO=idMinisterioi)>0 THEN
        SELECT IFNULL(yearweek(NOW())-
        (SELECT MAX(yearweek(FECHA)) FROM ASISTENCIAMI WHERE IDMINISTERIO=idMinisterioi),0) AS RESULT;
    ELSE
        SELECT 1 AS RESULT;
    END IF;
END$$
--GET_ROL
CREATE PROCEDURE GET_ROL(idUsuarioi INTEGER)
BEGIN
SELECT R.* FROM USUARIO U, DETROL DR, ROL R
WHERE U.IDUSUARIO=DR.IDUSUARIO
AND R.IDROL=DR.IDROL
AND R.ESTADO='1'
AND U.IDUSUARIO=idUsuarioi;
END$$
--GET_DISTRITO
CREATE PROCEDURE GET_DISTRITO(idCampoi INTEGER)
BEGIN
SELECT D.idDISTRITO, D.idCAMPO,D.NOMBRE, IFNULL(P.NOMBRES,'Ninguno') AS NOMBRES,
IFNULL(P.APELLIDOS,'Asignado')AS APELLIDOS, D.ESTADO
FROM DISTRITO D LEFT OUTER JOIN PERSONA P ON D.`idLIDER`=P.`idPERSONA`
WHERE D.idCAMPO=idCampoi;
END$$
--GET_ESCUELA
DELIMITER $$
CREATE PROCEDURE GET_ESCUELA(IDIGLESIAi INTEGER)
BEGIN
SELECT E.IDESCUELA, E.IDIGLESIA,E.NOMBRE, IFNULL(P.NOMBRES,'Ninguno') AS NOMBRES,
IFNULL(P.APELLIDOS,'Asignado')AS APELLIDOS, E.ESTADO
FROM ESCUELA E LEFT OUTER JOIN PERSONA P ON E.`idLIDER`=P.`idPERSONA`
WHERE E.IDIGLESIA=IDIGLESIAi;
END$$
--GET GRUPO
DELIMITER $$
CREATE PROCEDURE GET_GRUPO(IDESCUELAi INTEGER)
BEGIN
SELECT G.IDGRUPO, G.IDESCUELA,G.NOMBRE, IFNULL(P.NOMBRES,'Ninguno') AS NOMBRES,
IFNULL(P.APELLIDOS,'Asignado')AS APELLIDOS,G.idLIDER,G.FE_CREACION,G.LUG_REUNION, G.ESTADO
FROM GRUPO G LEFT OUTER JOIN PERSONA P ON G.`idLIDER`=P.`idPERSONA`
WHERE G.IDESCUELA=IDESCUELAi;
END$$
--GET_MINISTERIO
DELIMITER $$
CREATE PROCEDURE GET_MINISTERIO(IDIGLESIAi INTEGER)
BEGIN
SELECT M.IDMINISTERIO, M.IDIGLESIA,M.NOMBRE, IFNULL(P.NOMBRES,'Ninguno') AS NOMBRES,
IFNULL(P.APELLIDOS,'Asignado')AS APELLIDOS, M.FE_CREACION,M.IDLIDER, M.ESTADO
FROM MINISTERIO M LEFT OUTER JOIN PERSONA P ON M.IDLIDER=P.IDPERSONA
WHERE M.IDIGLESIA=IDIGLESIAi;
END$$
--GET_IDLIDER
CREATE PROCEDURE GET_IDLIDER(idPersonai INTEGER)
BEGIN
SELECT IFNULL(C.`idCAMPO`,0) AS IDCAMPO,C.`NOMBRE` AS NCAMPO,
IFNULL(D.`idDISTRITO`,0) AS IDDISTRITO, D.`NOMBRE` AS NDISTRITO,
IFNULL(I.`idIGLESIA`,0) AS IDIGLESIA, I.`NOMBRE` AS NIGLESIA,
IFNULL(E.`idESCUELA`,0) AS IDESCUELA, E.`NOMBRE` AS NESCUELA,
IFNULL(G.`idGRUPO`,0) AS IDGRUPO, G.`NOMBRE` AS NGRUPO,
IFNULL(M.`idMINISTERIO`,0) AS IDMINISTERIO, M.`NOMBRE` AS NMINISTERIO
FROM PERSONA P LEFT OUTER JOIN CAMPO C ON P.`idPERSONA`=C.`idLIDER`
LEFT OUTER JOIN DISTRITO D ON P.`idPERSONA`=D.`idLIDER`
LEFT OUTER JOIN IGLESIA I ON P.`idPERSONA`=I.`idLIDER`
LEFT OUTER JOIN ESCUELA E ON P.idPERSONA=E.idLIDER
LEFT OUTER JOIN GRUPO G ON P.`idPERSONA`=G.`idLIDER`
LEFT OUTER JOIN MINISTERIO M ON P.`idPERSONA`=M.`idLIDER`
WHERE P.`idPERSONA`=idPersonai;
END$$
--GET_AUTO_INCREMENT
CREATE FUNCTION GET_AUTO_INCREMENT(DATABASENAME VARCHAR(35),TABLENAME VARCHAR(35))
RETURNS INTEGER
BEGIN
DECLARE AUTO INTEGER;
SELECT `AUTO_INCREMENT` INTO AUTO
FROM  `INFORMATION_SCHEMA`.`TABLES`
WHERE TABLE_SCHEMA = DATABASENAME
AND   TABLE_NAME   = TABLENAME;
RETURN AUTO;
END$$
--ADD_DISTRITO
CREATE PROCEDURE ADD_DISTRITO(IDCAMPOi INTEGER, IDLIDERi INTEGER, NOMBREi VARCHAR(35),ESTADOi VARCHAR(35))
BEGIN
START TRANSACTION;
    INSERT INTO DISTRITO (idDISTRITO, idCAMPO, NOMBRE, idLIDER, ESTADO)
    VALUES(NULL,IDCAMPOi,NOMBREi, IDLIDERi,ESTADOi);
COMMIT;
IF IDLIDERi>0 THEN
    CALL REG_IDLIDER(IDLIDERi,2,(SELECT MAX(IDDISTRITO)FROM DISTRITO));
END IF;
END$$

--GET_INFO_GP
CREATE PROCEDURE GET_INFO_GP(IDPERSONAi INTEGER)
BEGIN
    SELECT M.*, G.NOMBRE AS GRUPO,G.IDLIDER AS CARGO, E.NOMBRE AS ESCUELA,
    I.NOMBRE AS IGLESIA, GET_PORCENT_ASIST(M.IDMIEMBROGP) AS PORCENTAJE
    FROM MIEMBROGP M, PERSONA P, GRUPO G, ESCUELA E, IGLESIA I
    WHERE P.IDPERSONA=M.IDPERSONA
    AND M.IDGRUPO=G.IDGRUPO
    AND G.IDESCUELA =E.IDESCUELA
    AND E.IDIGLESIA=I.IDIGLESIA
    AND P.IDPERSONA=IDPERSONAi
    ORDER BY M.ESTADO DESC;
END$$

--GET_INFO_MI
CREATE PROCEDURE GET_INFO_MI(IDPERSONAi INTEGER)
BEGIN
SELECT E.*, M.NOMBRE AS MINISTERIO, I.NOMBRE AS IGLESIA
, M.IDLIDER AS CARGO, GET_PORCENT_ASISTMI(E.`idMIEMBROMI`) AS PORCENTAJE
FROM PERSONA P, MIEMBROMI E, MINISTERIO M, IGLESIA I 
WHERE E.IDPERSONA =P.IDPERSONA
AND E.IDMINISTERIO=M.IDMINISTERIO
AND M.IDIGLESIA =I.idIGLESIA
AND P.IDPERSONA=IDPERSONAi;
END$$

-- CREA PERSONA
CREATE TRIGGER createPersona BEFORE INSERT ON Persona
    FOR EACH ROW
    BEGIN
        SET NEW.NOMBRES = UPPER(NEW.NOMBRES);
        SET NEW.APELLIDOS = UPPER(NEW.APELLIDOS);
        SET NEW.DIRECCION = UPPER(NEW.DIRECCION);
    END$$

CREATE TRIGGER createPersonAfter AFTER INSERT ON Persona
FOR EACH ROW
BEGIN
    INSERT INTO USUARIO (idUSUARIO, idPERSONA, USUARIO, CLAVE, FE_CREACION, ESTADO)
    VALUES(NULL, NEW.IDPERSONA, NEW.DNI,NEW.DNI,NOW(),'1');
END$$

CREATE TRIGGER createUsuarioAfter AFTER INSERT ON USUARIO
FOR EACH ROW
BEGIN
    INSERT INTO DETROL ( idROL, idUSUARIO) VALUES( 1,NEW.IDUSUARIO);
END$$
-- CREA CAMPO
DELIMITER $$
CREATE TRIGGER createCampo BEFORE INSERT ON campo
    FOR EACH ROW
    BEGIN
        SET NEW.NOMBRE = UPPER(NEW.NOMBRE);
    END $$  
--UPDATE CAMPO
DELIMITER $$
CREATE TRIGGER UPDATECAMPOAFTER AFTER UPDATE ON CAMPO
FOR EACH ROW
BEGIN
    DECLARE IDU INTEGER;
    SELECT IDUSUARIO INTO IDU FROM USUARIO WHERE IDPERSONA=OLD.IDLIDER;
    DELETE FROM DETROL WHERE IDUSUARIO =IDU AND IDROL=7;
END$$
--CREA DISTRITO
CREATE TRIGGER createDistrito BEFORE INSERT ON distrito
    FOR EACH ROW
    BEGIN
        SET NEW.NOMBRE = UPPER(NEW.NOMBRE);
    END $$ 
-- UPDATE DISTRITO
DELIMITER $$
CREATE TRIGGER UPDATEDISTRITOAFTER AFTER UPDATE ON DISTRITO
FOR EACH ROW
BEGIN
    DECLARE IDU INTEGER;
    SELECT IDUSUARIO INTO IDU FROM USUARIO WHERE IDPERSONA=OLD.IDLIDER;
    DELETE FROM DETROL WHERE IDUSUARIO =IDU AND IDROL=6;
END$$
--CREA IGLESIA
CREATE TRIGGER createIglesia BEFORE INSERT ON iglesia
    FOR EACH ROW
    BEGIN
        SET NEW.NOMBRE = UPPER(NEW.NOMBRE);
    END $$ 
--UPDATE IGLESIA
DELIMITER $$
CREATE TRIGGER UPDATEIGLESIAAFTER AFTER UPDATE ON IGLESIA
FOR EACH ROW
BEGIN
    DECLARE IDU INTEGER;
    SELECT IDUSUARIO INTO IDU FROM USUARIO WHERE IDPERSONA=OLD.IDLIDER;
    DELETE FROM DETROL WHERE IDUSUARIO =IDU AND IDROL=5;
END$$
-- CREA ESCUELA SAB√ÅTICA
CREATE TRIGGER createEscuela BEFORE INSERT ON escuela
    FOR EACH ROW
    BEGIN
        SET NEW.NOMBRE = UPPER(NEW.NOMBRE);
    END $$   
-- UPDATE ESCUELA
DELIMITER $$
CREATE TRIGGER UPDATEESCUELAAFTER AFTER UPDATE ON ESCUELA
FOR EACH ROW
BEGIN
    DECLARE IDU INTEGER;
    SELECT IDUSUARIO INTO IDU FROM USUARIO WHERE IDPERSONA=OLD.IDLIDER;
    DELETE FROM DETROL WHERE IDUSUARIO =IDU AND IDROL=10;
END$$
-- CREA GRUPO PEQUE√ëO
CREATE TRIGGER createGrupo BEFORE INSERT ON grupo
    FOR EACH ROW
    BEGIN
        SET NEW.NOMBRE = UPPER(NEW.NOMBRE);
        SET NEW.LUG_REUNION = UPPER(NEW.LUG_REUNION);
    END $$
-- UPDATE GRUPO
DELIMITER $$
CREATE TRIGGER UPDATEGRUPOAFTER AFTER UPDATE ON GRUPO
FOR EACH ROW
BEGIN
    DECLARE IDU INTEGER;
    SELECT IDUSUARIO INTO IDU FROM USUARIO WHERE IDPERSONA=OLD.IDLIDER;
    DELETE FROM DETROL WHERE IDUSUARIO =IDU AND IDROL=2;
END$$
-- CREA MINISTERIO
CREATE TRIGGER createMinisterio BEFORE INSERT ON ministerio
    FOR EACH ROW
    BEGIN
        SET NEW.NOMBRE = UPPER(NEW.NOMBRE);
    END $$
-- UPDATE MINISTERIO
DELIMITER $$
CREATE TRIGGER UPDATEMINISTERIOAFTER AFTER UPDATE ON MINISTERIO
FOR EACH ROW
BEGIN
    DECLARE IDU INTEGER;
    SELECT IDUSUARIO INTO IDU FROM USUARIO WHERE IDPERSONA=OLD.IDLIDER;
    DELETE FROM DETROL WHERE IDUSUARIO =IDU AND IDROL=3;
END$$

-- INSERT DISCIPULADOR
DELIMITER $$
CREATE TRIGGER INSERTDISCIPULADORAFTER AFTER INSERT ON DISCIPULADOR
FOR EACH ROW
BEGIN
    DECLARE IDU INTEGER;
    SELECT IDUSUARIO INTO IDU FROM USUARIO WHERE IDPERSONA=(SELECT IDPERSONA FROM MIEMBROGP WHERE IDMIEMBROGP=NEW.IDMIEMBROGP);
    INSERT INTO DETROL ( idROL, idUSUARIO) VALUES(4,IDU);
END$$

--GET_ PROGESO DISCIPULOS
DELIMITER $$
CREATE FUNCTION GET_PROGRESO_DISCIPULO(IDDI INTEGER)
RETURNS DECIMAL
BEGIN
    DECLARE TLECCION INTEGER;
    DECLARE TTRAB INTEGER;
    SELECT COUNT(*) INTO TLECCION FROM LECCION
    WHERE IDTIPOLECCION=(SELECT IDTIPOLECCION FROM DETLECCION WHERE IDDISCIPULADO=IDDI);
    SELECT COUNT(*) INTO TTRAB FROM TRABMISIONERO WHERE IDDISCIPULADO=IDDI;
    RETURN IFNULL((TTRAB*100)/TLECCION,0);
END$$

--GET TIPO DE LECCION DISCIPULADO
DELIMITER $$
CREATE PROCEDURE GET_TIPO_LECCION_DISCIPULO(IDDI INTEGER)
BEGIN
    SELECT T.*, DL.`ESTADO` AS ESTADODET
    FROM DETLECCION DL, DISCIPULADO D, TIPOLECCION T
    WHERE DL.`idDISCIPULADO`=IDDI
    AND DL.`idTIPOLECCION`=T.`idTIPOLECCION`
    AND DL.`idDISCIPULADO`=D.`idDISCIPULADO`;
END$$

-- ADD TIPO LECCION
DELIMITER $$
CREATE PROCEDURE ADD_TIPOLECCION(NOMBREi VARCHAR(64), ESTADOi CHAR(1))
BEGIN
    START TRANSACTION;
    INSERT INTO TIPOLECCION (idTIPOLECCION, NOMBRE, ESTADO) VALUES(NULL, NOMBREi, ESTADOi);
    COMMIT;
    SELECT MAX(`idTIPOLECCION`) AS IDTIPOLECCION FROM TIPOLECCION;
END$$

--GET_DATOSASISES
DELIMITER $$
CREATE PROCEDURE GET_DATOSASISES(IDESCUELAi INTEGER,FECHAi DATE,FECHAf DATE)
BEGIN
SELECT DISTINCT(G.NOMBRE),G.IDGRUPO,SUM(PRESENTES) PRESENTES,
SUM(FALTAS) FALTAS,COUNT(A.IDASISTENCIAGP) ASISTENCIAS
FROM ASISTENCIAGP A,GRUPO G,ESCUELA E 
WHERE G.IDESCUELA=E.IDESCUELA 
AND E.IDESCUELA=IDESCUELAi 
AND A.IDGRUPO=G.IDGRUPO
AND A.FECHA BETWEEN FECHAi AND FECHAf
GROUP BY A.IDGRUPO;
END$$

--GET_DATOSASISIG
DELIMITER $$
CREATE PROCEDURE GET_DATOSASISIG(IDIGLESIAi INTEGER,FECHAi DATE,FECHAf DATE)
BEGIN
SELECT DISTINCT(E.NOMBRE),E.IDESCUELA,SUM(A.PRESENTES) PRESENTES,
SUM(A.FALTAS) FALTAS,COUNT(A.IDASISTENCIAGP) ASISTENCIAS,SUM(A.PRESENTES+A.FALTAS) TOTAL
FROM ASISTENCIAGP A,GRUPO G,ESCUELA E,IGLESIA I 
WHERE G.IDESCUELA=E.IDESCUELA 
AND E.IDIGLESIA=IDIGLESIAi
AND E.IDIGLESIA=I.IDIGLESIA 
AND G.IDESCUELA=E.IDESCUELA 
AND A.IDGRUPO=G.IDGRUPO
AND A.FECHA BETWEEN FECHAi AND FECHAf
GROUP BY E.IDESCUELA;
END$$
--LISTADO DE MIEMBROS-DISCIPULADOR
DELIMITER$$
CREATE PROCEDURE GET_DISCIPULADOR_GP(IDGRUPOi INTEGER)
BEGIN
    SELECT P.`idPERSONA`, P.`NOMBRES`, P.`APELLIDOS`¬¥,MG.`idMIEMBROGP`,
        IFNULL(D.`idDISCIPULADOR`,0) AS DISCIPULADOR, IFNULL(D.`idASOCIADO`,0) AS ASOCIADO
    FROM PERSONA P, GRUPO G, MIEMBROGP MG LEFT OUTER JOIN DISCIPULADOR D
    ON MG.`idMIEMBROGP`=D.`idMIEMBROGP`
    WHERE P.`idPERSONA`=MG.`idPERSONA`
    AND MG.`idGRUPO`=G.`idGRUPO`
    AND MG.`idGRUPO`=IDGRUPOi;
END$$

-- ASIGNAR DISCIPULOS
DELIMITER$$
CREATE PROCEDURE ADD_DISCIPULO(IDPERSONAi INTEGER, IDDI INTEGER, TIPOi CHAR(1))
BEGIN
    DECLARE IDD INTEGER;
    DECLARE IDA INTEGER;
    SELECT `idASOCIADO` INTO IDA FROM DISCIPULADOR WHERE `idDISCIPULADOR`=IDDI;
    IF(SELECT COUNT(*)FROM DISCIPULADO WHERE IDPERSONA=IDPERSONAi)=0 THEN
        START TRANSACTION;
            INSERT INTO DISCIPULADO (idDISCIPULADO, idPERSONA, TIPO, FE_INICIO, ESTADO) VALUES(
            NULL, IDPERSONAi,TIPOi, NOW(),'1');
        COMMIT;
    END IF;
    SELECT `idDISCIPULADO` INTO IDD FROM DISCIPULADO WHERE IDPERSONA=IDPERSONAi;
    IF(SELECT COUNT(*) FROM DETDISCIPULADOR WHERE idDISCIPULADOR=IDDI AND idDISCIPULADO=IDD) =0 THEN
        START TRANSACTION;
            INSERT INTO DETDISCIPULADOR (idDISCIPULADOR, idDISCIPULADO, ESTADO) VALUES(IDDI,IDD,'1');
        COMMIT;
        IF IDA > 0 THEN
            IF(SELECT COUNT(*) FROM DETDISCIPULADOR WHERE idDISCIPULADOR=IDA AND idDISCIPULADO=IDD) =0 THEN
            START TRANSACTION;
                INSERT INTO DETDISCIPULADOR (idDISCIPULADOR, idDISCIPULADO, ESTADO) VALUES(IDA,IDD,'1');
            COMMIT;
            END IF;
        END IF;
    END IF;
END$$

--LISTAR DISCIPULOS
DELIMITER$$
CREATE PROCEDURE GET_DISCIPULO(IDDI INTEGER)
BEGIN
    SELECT A.* FROM
    (SELECT P.`NOMBRES`, P.`APELLIDOS`,DI.IDDISCIPULADOR, DI.IDASOCIADO,
    D.*, GET_PROGRESO_DISCIPULO(D.`idDISCIPULADO`) AS PROGRESO
    FROM PERSONA P, DISCIPULADO D, DETDISCIPULADOR DD, DISCIPULADOR DI
    WHERE P.`idPERSONA`=D.`idPERSONA`
    AND D.`idDISCIPULADO`=DD.`idDISCIPULADO`
    AND DD.`idDISCIPULADOR`=DI.`idDISCIPULADOR`)A
    WHERE A.IDDISCIPULADOR=IDDI OR A.IDDISCIPULADOR=(SELECT IDASOCIADO FROM DISCIPULADOR WHERE IDDISCIPULADOR=IDDI);
END$$

--GET_DATOSASISMINIG
DELIMITER $$
CREATE PROCEDURE GET_DATOSASISMINIG(IDIGLESIAi INTEGER,FECHAi DATE,FECHAf DATE)
BEGIN
SELECT DISTINCT(M.NOMBRE),M.IDMINISTERIO,SUM(A.PRESENTES) PRESENTES,
SUM(A.FALTAS) FALTAS,COUNT(A.IDASISTENCIAMI) ASISTENCIAS,SUM(A.PRESENTES+A.FALTAS) TOTAL
FROM ASISTENCIAMI A,MINISTERIO M,IGLESIA I 
WHERE M.IDIGLESIA=IDIGLESIAi
AND M.IDIGLESIA=I.IDIGLESIA
AND A.FECHA BETWEEN FECHAi AND FECHAf
GROUP BY M.IDMINISTERIO;
END$$

--GET_DATOSASISDIS
DELIMITER $$
CREATE PROCEDURE GET_DATOSASISDIS(IDDISTRITOi INTEGER,FECHAi DATE,FECHAf DATE)
BEGIN
SELECT DISTINCT(I.NOMBRE),I.IDIGLESIA,SUM(A.PRESENTES) PRESENTES,
SUM(A.FALTAS) FALTAS,COUNT(A.IDASISTENCIAGP) ASISTENCIAS,SUM(A.PRESENTES+A.FALTAS) TOTAL
FROM ASISTENCIAGP A,GRUPO G,ESCUELA E,IGLESIA I,DISTRITO D 
WHERE G.IDESCUELA=E.IDESCUELA 
AND E.IDIGLESIA=I.IDIGLESIA
AND D.IDDISTRITO=IDDISTRITOi 
AND I.IDDISTRITO=D.IDDISTRITO
AND G.IDESCUELA=E.IDESCUELA 
AND A.IDGRUPO=G.IDGRUPO
AND A.FECHA BETWEEN FECHAi AND FECHAf
GROUP BY I.IDIGLESIA;
END$$

--GET_DATOSASISMINDIS
DELIMITER $$
CREATE PROCEDURE GET_DATOSASISMINDIS(IDDISTRITOi INTEGER,FECHAi DATE,FECHAf DATE)
BEGIN
SELECT DISTINCT(I.NOMBRE),I.IDIGLESIA,SUM(A.PRESENTES) PRESENTES,
SUM(A.FALTAS) FALTAS,COUNT(A.IDASISTENCIAMI) ASISTENCIAS,SUM(A.PRESENTES+A.FALTAS) TOTAL
FROM ASISTENCIAMI A,MINISTERIO M,IGLESIA I,DISTRITO D 
WHERE M.IDIGLESIA=I.IDIGLESIA
AND D.IDDISTRITO=IDDISTRITOi 
AND I.IDDISTRITO=D.IDDISTRITO
AND A.IDMINISTERIO=M.IDMINISTERIO
AND A.FECHA BETWEEN FECHAi AND FECHAf
GROUP BY I.IDIGLESIA;
END$$

-- ADD ASCOIADO
DELIMITER$$
CREATE PROCEDURE ADD_ASOCIADO(IDDI INTEGER, IDA INTEGER)
BEGIN
    DECLARE IDDA INTEGER;
    DECLARE IDI INTEGER;
    DECLARE TMP INTEGER;
    IF(SELECT COUNT(*) FROM DISCIPULADOR WHERE IDMIEMBROGP=IDA)=0 THEN
        START TRANSACTION;
            INSERT INTO DISCIPULADOR (idDISCIPULADOR, idMIEMBROGP, idASOCIADO, FE_INICIO, ESTADO) VALUES(
            NULL,IDA,IDDI, NOW(),'1');
        COMMIT;
        SELECT IDDISCIPULADOR INTO IDDA FROM DISCIPULADOR WHERE IDASOCIADO=IDDI;
        START TRANSACTION;
            UPDATE DISCIPULADOR SET IDASOCIADO=IDDA WHERE IDDISCIPULADOR=IDDI;
        COMMIT;
    ELSE
        SELECT IDASOCIADO INTO TMP FROM DISCIPULADOR WHERE IDDISCIPULADOR=IDDI;
        START TRANSACTION;
            UPDATE DISCIPULADOR SET IDASOCIADO=0 WHERE IDDISCIPULADOR=TMP;
        COMMIT;
        SELECT IDDISCIPULADOR INTO IDDA FROM DISCIPULADOR WHERE IDMIEMBROGP=IDA;
        START TRANSACTION;
            UPDATE DISCIPULADOR SET IDASOCIADO=IDDA WHERE IDDISCIPULADOR=IDDI;
        COMMIT;
        SELECT IDDISCIPULADOR INTO IDI FROM DISCIPULADOR WHERE IDMIEMBROGP=IDA;
        START TRANSACTION;
            UPDATE DISCIPULADOR SET IDASOCIADO=IDDI WHERE IDDISCIPULADOR=IDI;
        COMMIT;
        START TRANSACTION;
            UPDATE DETDISCIPULADOR SET IDDISCIPULADOR=IDDI WHERE IDDISCIPULADOR=TMP;
        COMMIT;
    END IF;
END$$

--ELIMINAR DISCIPULADOR
DELIMITER$$
CREATE PROCEDURE DEL_DISCIPULADOR(IDDI INTEGER)
BEGIN
    DECLARE IDA INTEGER;
    SELECT IDASOCIADO INTO IDA FROM DISCIPULADOR WHERE IDDISCIPULADOR=IDDI;
    IF IDA>0 THEN
        START TRANSACTION;
        UPDATE DETDISCIPULADOR SET IDDISCIPULADOR=IDA WHERE IDDISCIPULADOR=IDDI;
        COMMIT;
        DELETE FROM DETROL WHERE IDUSUARIO=
        (SELECT IDUSUARIO FROM USUARIO WHERE IDPERSONA=
        (SELECT IDPERSONA FROM MIEMBROGP WHERE IDMIEMBROGP=
        (SELECT IDMIEMBROGP FROM DISCIPULADOR WHERE IDDISCIPULADOR=IDDI))) AND IDROL=4;
        UPDATE DISCIPULADOR SET IDASOCIADO=0 WHERE IDDISCIPULADOR=IDA;
        DELETE FROM DISCIPULADOR WHERE IDDISCIPULADOR=IDDI;
        SELECT 1 AS RESULT;
    ELSE
        IF(SELECT COUNT(*) FROM DETDISCIPULADOR WHERE IDDISCIPULADOR=IDDI)>0 THEN
            SELECT -1 AS RESULT;
        ELSE
            DELETE FROM DETROL WHERE IDUSUARIO=
            (SELECT IDUSUARIO FROM USUARIO WHERE IDPERSONA=
            (SELECT IDPERSONA FROM MIEMBROGP WHERE IDMIEMBROGP=
            (SELECT IDMIEMBROGP FROM DISCIPULADOR WHERE IDDISCIPULADOR=IDDI))) AND IDROL=4;
            DELETE FROM DISCIPULADOR WHERE IDDISCIPULADOR=IDDI;
            SELECT 1 AS RESULT;
        END IF;
    END IF;
END$$
-- GET LECCION X DISCIPULO
DELIMITER $$
CREATE PROCEDURE GET_LECCION_DISCIPULO(IDT INTEGER,IDDI INTEGER)
BEGIN
    SELECT L.*, 
    IFNULL((SELECT IDLECCION FROM TRABMISIONERO WHERE `idLECCION`=L.IDLECCION AND `idDISCIPULADO`=IDDI),0) AS TRABAJO
    FROM LECCION L, DISCIPULADO D, DETLECCION DD, TIPOLECCION TL
    WHERE L.`idTIPOLECCION`=TL.`idTIPOLECCION`
    AND DD.`idTIPOLECCION`=TL.`idTIPOLECCION`
    AND D.`idDISCIPULADO`=DD.`idDISCIPULADO`
    AND D.`idDISCIPULADO`=IDDI
    AND L.`idTIPOLECCION`=IDT;
END$$
